[tracepulse]



[IMPORTANT FACTS:]
---------------------------------------------------
- I have packets in reporter thread result callback  not immediately after trace_publish_result()
 call, but only when we transfer 100 packet from every thread.
- Both ordered and unordered combiners work.
- We stop after receiving 256 packets. probably some queue is full and we need to free packets.
  (need to call trace_free_packet(trace, result->value.pkt) in result callback)
  So libtrace has some internal queue with size 256 packets.
- In reporter thread we get packets from combiner thread, not from processing threads, so thread id is always -1.
- If combiner is 'ordered' - another threads except 0 doesn't send packets to combiner/reporter and stuck at 256.
  If 'unordered' - we have in reporter sum of packets from all threads.
  So in case if combiner is 'ordered' we need to provide some info of how to sort packets.



we need:
---------
- starting callback			- \/
- perpacket callback			- \/
- stopping callback			- \/

- starting cb for reporting thread 	- \/

The reporter thread receives all of the results published by the processing threads


things to solve:
--------
- in packet cb do we need to copy or somehow pass packet to reporter thread?
- in stop cb should we use RESULT_USER or RESULT_PACKET?
- do we need to call trace_publish_result(trace, t, 0, gen, RESULT_PACKET); from every packet 
callback


WORKING MECHANISM:
-----------
- start callbacks for processing threads and for reporter thread allocate some internal
storage with malloc and return pointer to that storage.
- we forward packets to combiner/reporter in packet_cb() in every processing thread. this is done via 
trace_publish_result(trace, thread, 0, (libtrace_generic_t){.pkt = packet}, RESULT_PACKET);




PER PACKET:
-----------------
We need to write packet, so it will be redirected to odp/accelio/kafka/file/whatever.


        if (trace_write_packet(output, *packet)==-1) {
                trace_perror_output(output,"write_packet");
                return -1;
        }



OUTPUT:
--------------
Нам нужно в итоге все пакеты сохранять в файл.


                output=trace_create_output(buffer);
                if (trace_is_err_output(output)) {
                        trace_perror_output(output,"%s",buffer);
                        free(buffer);
                        return -1;
                }
                if (compress_level!=-1) {
                        if (trace_config_output(output,
                                                TRACE_OPTION_OUTPUT_COMPRESS,
                                                &compress_level)==-1) {
                                trace_perror_output(output,"Unable to set compression level");
                        }
                }

                if (trace_config_output(output,
                                        TRACE_OPTION_OUTPUT_COMPRESSTYPE,
                                        &compress_type) == -1) {
                        trace_perror_output(output, "Unable to set compression type");
                }

                trace_start_output(output);
                if (trace_is_err_output(output)) {
                        trace_perror_output(output,"%s",buffer);
                        free(buffer);
                        return -1;
                }



do not queue packets in combiner:
------------------------------------------
        /* Send every result to the reporter immediately, i.e. do not buffer
         * them. */
        trace_set_reporter_thold(trace, 1);








